<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!--配置文件的位置-->
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath*:database.properties</value>
            </list>
        </property>
    </bean>
    <!--启用注解功能-->
    <context:annotation-config/>
    <context:component-scan base-package="com.qtong">
        <!--此配置项标明不会扫描有Controller注解的类，但是由于shiro的注解一般放在controller里面，所以还是要扫描这些-->
        <!--<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>-->
    </context:component-scan>


    <!--事务管理-->
    <bean id="transactionManager"
          class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"></property>
    </bean>
    <aop:config proxy-target-class="true">
        <aop:pointcut id="methodExecution"
                      expression="execution(* com.qtong..service..*(..))"/>
        <!--对所有的方法进行监控-->
        <aop:advisor advice-ref="txAdvice" pointcut-ref="methodExecution"/>
        <!--  <aop:advisor advice-ref="druid-stat-interceptor" pointcut-ref="methodExecution"/>-->
    </aop:config>

    <!--    <bean id="druid-stat-interceptor"
              class="com.alibaba.druid.support.spring.stat.DruidStatInterceptor">
        </bean>-->
    <tx:advice transaction-manager="transactionManager" id="txAdvice">
        <tx:attributes>
            <!--propagation 是事务传播的属性，主要是配置service调用service的时候事务的开启方式-->
            <tx:method name="do*" propagation="REQUIRED" read-only="false"
                       rollback-for="Exception"/>
            <tx:method name="del*" propagation="REQUIRED" read-only="false"
                       rollback-for="Exception"/>
            <tx:method name="save*" propagation="REQUIRED" read-only="false"
                       rollback-for="Exception"/>
            <tx:method name="add*" propagation="REQUIRED" read-only="false"
                       rollback-for="Exception"/>
            <tx:method name="update*" propagation="REQUIRED" read-only="false"
                       rollback-for="Exception"/>
            <tx:method name="insert*" propagation="REQUIRED" read-only="false"
                       rollback-for="Exception"/>
            <tx:method name="create*" propagation="REQUIRED" read-only="false"
                       rollback-for="Exception"/>
            <tx:method name="find*" read-only="true"/>
            <tx:method name="get*" read-only="true"/>
            <tx:method name="query*" read-only="true"/>
            <tx:method name="select*" read-only="true"/>
            <tx:method name="list*" read-only="true"/>
            <tx:method name="*" read-only="true"/>
        </tx:attributes>
    </tx:advice>
    <tx:annotation-driven transaction-manager="transactionManager"/>
    <!--定时任务-->
    <!--<import resource="spring-quartz.xml"/>-->

    <!--缓存功能,将此功能单独拿出去做配置，是考虑到将来可能采用其他缓存方式-->
    <import resource="applicationCache.xml"/>
    <!--数据库配置，此项也是经常变动的项目，故而将其拿出去单独配置-->
    <import resource="applicationDataSource.xml"/>
    <import resource="security/applicationSecurity.xml"></import>
</beans>